import { Title } from "../src/components/Title";
import { InputForm } from "../src/components/InputForm";
import { TodoList } from "../src/components/TodoList";
import { TodoProvider } from "../src/components/providers/TodoProvider";
import { ChangeEvent, FormEvent, useState } from "react";
import Validate from "../src/Validate/Validate";
import Link from "next/link";
import { Router, useRouter } from "next/router";

export type Initial = {
  username: string;
  mailAddres: string;
  password: string;
};

function Login() {
  const initialValues = { username: "", mailAddres: "", password: "" };
  const [formValues, setFormValues] = useState(initialValues);
  const [formErrors, setFormErrors] = useState(initialValues);
  const [isSubmit, setIsSubmit] = useState(false);
  const router = useRouter();

  function HandleChange(props: ChangeEvent<HTMLInputElement>) {
    const { name, value } = props.target;
    setFormValues({ ...formValues, [name]: value });
  }

  function HandleSubmit(props: FormEvent<HTMLFormElement>) {
    props.preventDefault();
    setFormErrors(Validate(formValues));
    setIsSubmit(true);
  }

  function Foo(text: string, type: string) {
    return (
      <>
        <div>
          <label>{text}</label>
          <input
            type="text"
            placeholder={text}
            name={type}
            onChange={(e) => HandleChange(e)}
          ></input>
        </div>
      </>
    );
  }

  return (
    <>
      <div className="body">
        <Title />
        <InputForm taskList={taskList} setTaskList={setTaskList} />
        <TodoProvider>
          <TodoList taskList={taskList} setTaskList={setTaskList} />
        </TodoProvider>
      </div>
      <form onSubmit={(e) => HandleSubmit(e)}>
        <h1>ログインフォーム</h1>
        <hr />
        <div>
          <div>
            <label>ユーザー名</label>
            <input
              type="text"
              placeholder="ユーザー名"
              name="username"
              onChange={(e) => HandleChange(e)}
            ></input>
          </div>

          <p className="errorMsg">{formErrors.username}</p>
          <div className="formField">
            <label>メールアドレス</label>
            <input
              type="text"
              placeholder="メールアドレス"
              name="mailAddres"
              onChange={(e) => HandleChange(e)}
            ></input>
          </div>
          <p className="errorMsg">{formErrors.mailAddres}</p>
          <div className="formField">
            <label>パスワード</label>
            <input
              type="text"
              placeholder="パスワード"
              name="password"
              onChange={(e) => HandleChange(e)}
            ></input>
          </div>
          <p className="errorMsg">{formErrors.password}</p>
          <button className="sumitbutton">ログイン</button>
        </div>
      </form>
      {formErrors.username === "" &&
        formErrors.mailAddres === "" &&
        formErrors.password === "" &&
        isSubmit && <div>ログインに成功しました</div> &&
        router.push({ pathname: "/todo" })}
    </>
  );
}

export default Login;
/*
function Home() {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{" "}
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}*/
